[{"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/actionCreators.js":"1","/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/actionTypes.js":"2","/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/economical.js":"3","/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/configureStore.js":"4","/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/index.js":"5","/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/components/MainComponent.js":"6"},{"size":5033,"mtime":1613897064991,"results":"7","hashOfConfig":"8"},{"size":792,"mtime":1613906245170,"results":"9","hashOfConfig":"8"},{"size":709,"mtime":1613906315596,"results":"10","hashOfConfig":"8"},{"size":619,"mtime":1613906335865,"results":"11","hashOfConfig":"8"},{"size":267,"mtime":1613646029962,"results":"12","hashOfConfig":"8"},{"size":8653,"mtime":1613895055604,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pgxm6q",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/actionCreators.js",[],"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/actionTypes.js",[],"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/economical.js",[],"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/redux/configureStore.js",[],"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/index.js",[],["28","29"],"/home/iamvikasthakur/Desktop/webdev/client/articleHubClientRedux/src/components/MainComponent.js",["30","31"],"import React, { useState, useEffect } from \"react\";\nimport Navbarr from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport {\n  Route,\n  Redirect,\n  Switch,\n  useHistory,\n  useParams,\n} from \"react-router-dom\";\nimport {\n  fetchEconomicalArticle,\n  fetchScienceArticle,\n  fetchSportArticle,\n  fetchTechnicalArticle,\n} from \"../redux/actionCreators\";\nimport MainJumbotron from \"./jumbotrons/MainJumbotron\";\nimport EcoJumbotron from \"./jumbotrons/EcoJumbotron\";\nimport TechJumbotron from \"./jumbotrons/TechJumbotron\";\nimport SportJumbotron from \"./jumbotrons/SportJumbotron\";\nimport SciJumbotron from \"./jumbotrons/SciJumbotron\";\nimport Article from \"./Article\";\nimport Write from \"./Write\";\nimport Cardd from \"./Card\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport HomeCard from \"./HomeCard\";\nimport firebase from \"firebase/app\";\nimport firebaseConfig from \"../firebaseConfig\";\nimport \"firebase/auth\";\nimport axios from \"../axios\";\nimport { connect } from \"react-redux\";\n\nfirebase.initializeApp(firebaseConfig);\n\nconst Main = (props) => {\n  const [initializing, setInitializing] = useState(false);\n  const [user, setUser] = useState(() => firebase.auth.currentUser);\n\n  const history = useHistory();\n\n  const signInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().useDeviceLanguage();\n    try {\n      await firebase\n        .auth()\n        .signInWithPopup(provider)\n        .then((result) => {\n          authenticate(result.credential.idToken, result.user);\n        });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        // console.log(user);\n        setUser(user);\n        localStorage.setItem(\"email\", user.email);\n        localStorage.setItem(\"accessToken\", user.za);\n        localStorage.setItem(\"name\", user.displayName);\n        updateAuthenticate(user.za, user.email);\n      } else {\n        setUser(false);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n\n    // Cleanup subscription\n    return unsubscribe;\n  }, [initializing]);\n\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n      setUser(false);\n      localStorage.removeItem(\"email\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"name\");\n      history.push(\"/\");\n      console.log(\"signing out\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const authenticate = (idToken, user) => {\n    const userData = {\n      name: user.displayName,\n      photoUrl: user.photoURL,\n      accessToken: user.za,\n      email: user.email,\n    };\n    // console.log(userData);\n    // console.log(idToken);\n    axios\n      .post(\"/authenticate\", { idToken: idToken, userData: userData })\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const updateAuthenticate = (accessToken, email) => {\n    // console.log(email);\n    axios\n      .post(\"/authenticate/update\", { accessToken: accessToken, email: email })\n      .then((res) => {\n        // console.log(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const Home = (props) => {\n    console.log(props);\n\n    return (\n      <>\n        <MainJumbotron />\n        <HomeCard />\n      </>\n    );\n  };\n\n  const Eco = (props) => {\n    // props.fetchEconomicalArticle();\n    // console.log(props.economical);\n\n    useEffect(() => {\n      console.log(\"useEffect in main\");\n      props.fetchEconomicalArticle();\n      // console.log(props.economical);\n    },[]);\n\n    // if (props.economical.isLoading) {\n    //   return <Loading />\n    // }\n\n    // if (props.economical.errMess) {\n    //   return <Error errMess={this.props.economical.errMess} />\n    // }\n\n    return (\n      <>\n        {console.log(props)}\n        <EcoJumbotron />\n        {/* <Cardd data={props.economical.articles.data} topic={\"economical\"} /> */}\n      </>\n    );\n  };\n\n  const Tech = () => {\n    var data = fetchTechnicalArticle();\n\n    if (data.isLoading) {\n      <Loading />;\n    }\n\n    if (data.errMess) {\n      <Error errMess={data.errMess} />;\n    }\n\n    return (\n      <>\n        <TechJumbotron />\n        <Cardd data={data.payload} topic={\"technical\"} />\n      </>\n    );\n  };\n\n  const Sport = () => {\n    var data = fetchSportArticle();\n\n    if (data.isLoading) {\n      <Loading />;\n    }\n\n    if (data.errMess) {\n      <Error errMess={data.errMess} />;\n    }\n\n    return (\n      <>\n        <SportJumbotron />\n        <Cardd data={data.payload} topic={\"sport\"} />\n      </>\n    );\n  };\n\n  const Sci = () => {\n    var data = fetchEconomicalArticle();\n\n    if (data.isLoading) {\n      <Loading />;\n    }\n\n    if (data.errMess) {\n      <Error errMess={data.errMess} />;\n    }\n\n    return (\n      <>\n        <SciJumbotron />\n        <Cardd data={data.payload} topic={\"science\"} />\n      </>\n    );\n  };\n\n  const Add = () => {\n    return (\n      <>\n        {user && (\n          <Write\n            email={localStorage.getItem(\"email\")}\n            author={localStorage.getItem(\"name\")}\n            accessToken={localStorage.getItem(\"accessToken\")}\n          />\n        )}\n      </>\n    );\n  };\n\n  const DetailedCard = () => {\n    const [article, setArticle] = useState();\n    const { topic, id } = useParams();\n    const [alreadyLiked, setAlreadyLiked] = useState(false);\n    const [alreadyDisliked, setAlreadyDisliked] = useState(false);\n    const [isLoading1, setIsLoading1] = useState(true);\n    const [isLoading2, setIsLoading2] = useState(true);\n    console.log(topic, id, article);\n\n    useEffect(() => {\n      console.log(\"inside useeffect\");\n      const email = localStorage.getItem(\"email\");\n      const accessToken = localStorage.getItem(\"accessToken\");\n\n      const config = {\n        headers: {\n          email: email,\n          accessToken: accessToken,\n        },\n      };\n\n      axios\n        .get(`/${topic}/${id}`, config)\n        .then((response) => {\n          setArticle(response.data);\n          // console.log(response.data);\n          setIsLoading1(false);\n        })\n        .catch((err) => console.log(err));\n\n      if (email) {\n        axios\n          .get(`user/${email}`, config)\n          .then((response) => {\n            if (response) {\n              // console.log(response.data);\n              setAlreadyLiked(response.data[0].likedArticleId.includes(id));\n              setAlreadyDisliked(\n                response.data[0].dislikedArticleId.includes(id)\n              );\n              setIsLoading2(false);\n              // console.log(alreadyLiked, alreadyDisliked);\n            }\n          })\n          .catch((err) => console.log(err));\n      }\n    }, []);\n\n    if (isLoading1 || isLoading2) {\n      return (\n        <div>\n          <h1>Loading...</h1>\n        </div>\n      );\n    }\n\n    return (\n      <Article\n        article={article}\n        alreadyLiked={alreadyLiked}\n        alreadyDisliked={alreadyDisliked}\n        setAlreadyDisliked={setAlreadyDisliked}\n        setAlreadyLiked={setAlreadyLiked}\n        topic={topic}\n        email={localStorage.getItem(\"email\")}\n      />\n    );\n  };\n\n  // useEffect((props) => {\n  //   props.fetchEconomicalArticle();\n  //   props.fetchScienceArticle();\n  //   props.fetchTechnicalArticle();\n  //   props.fetchSportArticle();\n  // }, [])\n\n  // console.log(props);\n\n  return (\n    <div>\n      <Navbarr\n        user={user}\n        signInWithGoogle={signInWithGoogle}\n        signOut={signOut}\n      />\n      <Switch history={history}>\n        <Route exact path=\"/\" component={() => Home(props)} />\n        <Route exact path=\"/economical\" component={() => Eco(props)} />\n        <Route exact path=\"/technical\" component={Tech} />\n        <Route exact path=\"/sport\" component={Sport} />\n        <Route exact path=\"/science\" component={Sci} />\n        <Route exact path=\"/write\" component={Add} />\n        <Route exact path=\"/:topic/:id\" component={DetailedCard} />\n        <Redirect to=\"/\" />\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    economical: state.economical,\n    technical: state.technical,\n    sport: state.sport,\n    science: state.science,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchEconomicalArticle: () => dispatch(fetchEconomicalArticle()),\n    fetchTechnicalArticle: () => dispatch(fetchTechnicalArticle()),\n    fetchSportArticle: () => dispatch(fetchSportArticle()),\n    fetchScienceArticle: () => dispatch(fetchScienceArticle())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":138,"column":7,"nodeType":"38","endLine":138,"endColumn":9,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"40","line":274,"column":8,"nodeType":"38","endLine":274,"endColumn":10,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["44"],"React Hook useEffect has missing dependencies: 'id' and 'topic'. Either include them or remove the dependency array.",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"48","fix":"49"},"Update the dependencies array to be: [props]",{"range":"50","text":"51"},"Update the dependencies array to be: [id, topic]",{"range":"52","text":"53"},[3650,3652],"[props]",[6756,6758],"[id, topic]"]